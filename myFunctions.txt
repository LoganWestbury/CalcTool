using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.Diagnostics;


namespace Assessment
{
    public class Functions
    {
        // Method for finding the factorial of a number
        public static void LoadConsoleSettings()
        {
            // Set console colour and background
            Console.BackgroundColor = ConsoleColor.Black;
            Console.ForegroundColor = ConsoleColor.White;
        }

        public static void NewUserOrExisting(string userName)
        {
            int UserChoice = 0;
            int AmountOfChoices = 2;
            int accountValid = 0;
            
            userName = "";

            string userName2 = userName;

            Console.Clear();

            do
            {
                UserChoice = 0;
            Console.WriteLine("Do you have an existing account?" + Environment.NewLine);
            Console.WriteLine("Option 1: No" + Environment.NewLine);
            Console.WriteLine("Option 2: Yes" + Environment.NewLine);

            // Ask user which for a choice and validate it
            Functions.Two_Value_Verification(1, AmountOfChoices, ref UserChoice);

            

            Console.Clear();

            switch (UserChoice)
            {
                case 1: // Create User

                    Functions.CreateUser(ref userName2);

                    Console.WriteLine("Press any key to return to the menu.");

                    break;

                case 2: // Login

                    Functions.LoginUserNamePassWord(ref userName2);

                    Console.WriteLine("Press any key to return to the menu.");

                    accountValid = 1;

                    return;
            }
            // If userchoice does not equal the exit command
            if (UserChoice != AmountOfChoices)
            {
                Console.ReadKey();
                Console.Clear();
            }

            }
            // Loop while userchoice does not equal the exit command
                while ((UserChoice != AmountOfChoices) || (accountValid == 1));

            userName = userName2;

        }

        public static void CreateUser(ref string userName)
        {
            

            int valid = 0;
            
            do
            {

                Console.Clear();

                Console.WriteLine("Enter your new username:" + Environment.NewLine);
                userName = Console.ReadLine();

                if (userName.All(char.IsLetterOrDigit))
                {
                    valid = 1;
                    
                }
                else
                {
                    Console.WriteLine("Invalid username. Press any key to try again.");
                    Console.ReadLine();
                    valid = 0;
                }
            }
            while (valid == 0);

            Console.WriteLine("Enter your new password:" + Environment.NewLine);
            string passWord = Console.ReadLine();

            string complete = (userName + "|" + passWord);

         

            //string path = Environment.CurrentDirectory + @"\Data.txt";

            using (System.IO.StreamWriter file = new System.IO.StreamWriter(@"C:\Users\Logan\Documents\Assessment\Assessment\Data.txt", true))
            {
                file.WriteLine(complete);
            }

            using (System.IO.StreamWriter file = new System.IO.StreamWriter(@"C:\Users\Logan\Documents\Assessment\Assessment\Data\" + userName + ".txt"))
            {
                
            }
        }
        
        public static void OpenNotepad(string userName)
        {

            var fileToOpen = (@"C:\Users\Logan\Documents\Assessment\Assessment\Data\" + userName + ".txt");
            var process = new Process();
            process.StartInfo = new ProcessStartInfo()
            {
                UseShellExecute = true,
                FileName = fileToOpen
            };

            process.Start();
            process.WaitForExit();

            

        }

        public static void LoginUserNamePassWord(ref string userName)
        {

            int counter = 0;
            string line;

            int lineCount = File.ReadLines(@"C:\Users\Logan\Documents\Assessment\Assessment\Data.txt").Count();

            string[] userNamePassWord = new string[lineCount];

            // Read the file and display it line by line.
            System.IO.StreamReader file =
               new System.IO.StreamReader(@"C:\Users\Logan\Documents\Assessment\Assessment\Data.txt");
            while ((line = file.ReadLine()) != null)
            {
                userNamePassWord[counter] = line;
                //Console.WriteLine(line);
                counter++;
            }

            string loginBeforeVal = "";

            int found = 0;


            

            //do
            while (found == 0)
            {
                if (found == 1) 
                {
                    return;
                }

                Console.Clear();

                Console.WriteLine("--- Login ---" + Environment.NewLine);

                Console.WriteLine("Enter your username:" + Environment.NewLine);
                userName = Console.ReadLine();

                Console.WriteLine("Enter your password:" + Environment.NewLine);
                string passWord = Console.ReadLine();

                loginBeforeVal = (userName + "|" + passWord);                      

                if (userNamePassWord.Any(loginBeforeVal.Contains))
                {
                    //Console.WriteLine("Login Accepted!");
                    found = 1;
                    //Console.ReadKey();
                     
                }
                else
                {
                    Console.WriteLine("Invalid Login.");
                    found = 0;
                    //Console.ReadKey();
                }

            }
            //while (found == 0);


            Console.WriteLine("You have successfully logged in!." + Environment.NewLine + "Press any key to continue.");
            Console.ReadKey();
            Console.Clear();
            file.Close();

            // Suspend the screen.
            // Console.ReadLine();

        }
                
        public static void Two_Value_Verification(int min_value, int max_value, ref int userValue)
        {
            int index;
            string UserChoiceString = ("");
            
            do  // Loop to validate a user entered value 
            {   // Ask user to enter a number which is within a pre defined range
                Console.WriteLine("Enter a number between " + min_value + " and " + max_value + ":" + Environment.NewLine);
                UserChoiceString = Console.ReadLine();
                
                if (Int32.TryParse(UserChoiceString, out index))
                {   // Input is a number - USER WILL BE HERE IF ANY NUMBER IS ENTERED
                    userValue = Convert.ToInt32(UserChoiceString);
                }
                else // Input is not a number
                {   // Notify user that inputs is not valid
                    Console.WriteLine(Environment.NewLine + "Input is invalid. Reason: input is not a numerical value");
                }

            }
            while ((userValue < 1) || (userValue > max_value));

            // Convert the user input into an integer
            userValue = Convert.ToInt32(UserChoiceString);
        }   // End of function

        // Method for verifying if a value entered is actually a number and not a string
        public static void Number_Verification(ref int userValue, string message)
        {
            int index;
            string UserChoiceString = ("");
            int valid = 0;

            do  // Loop to validate a user entered value 
            {   // Get number from user                
                Console.WriteLine(message + Environment.NewLine);
                UserChoiceString = Console.ReadLine();

                // Validate if the input from user is a number or if it contains or characters
                if (Int32.TryParse(UserChoiceString, out index))
                {   // Input is a number
                    valid = 1;
                    userValue = Convert.ToInt32(UserChoiceString);
                }
                else // Input is not a number
                {
                    valid = 0;
                    Console.WriteLine(Environment.NewLine + "Input is invalid. Enter a number.");
                }
            }
            while (valid != 1);

            userValue = Convert.ToInt32(UserChoiceString);
        }   // End of function

       

        
    }
}
